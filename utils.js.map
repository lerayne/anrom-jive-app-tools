{"version":3,"sources":["src/utils.es6"],"names":["unescapeHtmlEntities","pause","splitArray","sliceArray","abridge","getCacheableImage","findContentImage","getImagelessHTML","getContentImage","jsonCopy","isEmptyObject","jQuery","window","text","Error","temp","document","createElement","innerHTML","innerText","textContent","ms","setTimeout","resolve","array","chunksNumber","Array","newArray","i","push","undefined","length","chunkLength","Math","ceil","forEach","item","chunkNumber","floor","sliceSize","sourceArray","targetArrayOfArrays","splice","newText","slice","match","words","split","join","replace","initialImageURL","imageWidth","thumbnail","jiveStorageResult","imageNumberChunks","imageID","contentItem","mode","fallback","content","includes","image","getFromApi","contentImages","ref","thumbnailURL","find","attr","regexp","RegExp","matches","imagesArray","exec","htmlText","options","defaultOptions","obj","JSON","parse","error","console","utils"],"mappings":"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","file":"utils.js","sourcesContent":["import 'core-js/fn/array/includes'\n\nconst jQuery = window.jQuery\n\nexport function unescapeHtmlEntities (text) {\n  if (typeof text !== 'string') throw new Error('Argument should be a string')\n\n  const temp = document.createElement('div')\n  temp.innerHTML = text //.replace(/<|&lt;/gi, '‹').replace(/>|&gt;/gi, '›')\n  return temp.innerText || temp.textContent\n}\n\nexport function pause (ms = 0) {\n  if (typeof ms !== 'number') throw new Error('Expected parameter to be a number')\n  if (ms < 0) throw new Error('We can\\'t do time travel :) Please input a positive number or 0')\n\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function splitArray (array, chunksNumber) {\n  if (!(array instanceof Array)) throw new Error('1st argument should be an array')\n  if (typeof chunksNumber !== 'number') throw new Error('2nd argument should be a number')\n  if (chunksNumber <= 0) return []\n  if (chunksNumber === 1) return array\n\n  const newArray = []\n\n  for (let i = 0; i < chunksNumber; i++) {\n    newArray.push([])\n  }\n\n  if (array !== undefined && array.length) {\n    const chunkLength = Math.ceil(array.length / chunksNumber)\n\n    array.forEach((item, i) => {\n      const chunkNumber = Math.floor(i / chunkLength)\n      newArray[chunkNumber].push(item)\n    })\n  }\n\n  return newArray\n}\n\nexport function sliceArray (array, sliceSize) {\n  if (!(array instanceof Array)) throw new Error('1st argument should be an array')\n  if (typeof sliceSize !== 'number') throw new Error('2nd argument should be a number')\n  if (sliceSize <= 0) throw new Error('2nd argument should 1 or more')\n  if (sliceSize >= array.length) return [array]\n\n  const sourceArray = [...array]\n  const targetArrayOfArrays = []\n\n  while (sourceArray.length) {\n    targetArrayOfArrays.push(sourceArray.splice(0, sliceSize))\n  }\n\n  return targetArrayOfArrays\n}\n\nexport function abridge (text, length = 160) {\n\n  if (typeof text !== 'string') {\n    throw new Error(`\"abridge\" 1st argument must be a string (${typeof text} given)`)\n  }\n\n  //if it's less than limit - just return it\n  if (text.length <= length) return text\n\n  let newText = text.slice(0, length)\n\n  // if the next symbol is not a whitespace and not a punctuation - remove last word\n  if (!text[length].match(/\\s|\\.|,|:|;|!|\\?/)) {\n\n    let words = newText.split(' ')\n\n    //remove last word (cause it can be broken, or too long in case of a link)\n    if (words.length > 1) {\n      words = words.slice(0, words.length - 1)\n    }\n\n    newText = words.join(' ')\n  }\n\n  // remove commas and dots from a last word\n  newText = newText.replace(/(\\.|,|;|:)$/, '')\n\n  return newText + '...'\n}\n\nexport function getCacheableImage (initialImageURL, imageWidth = 500, thumbnail = false) {\n\n  //return initialImageURL\n  if (!initialImageURL) return initialImageURL\n\n  if (typeof initialImageURL !== 'string') {\n    throw new Error('1st argument should be falsy value or string')\n  }\n  if (typeof imageWidth !== 'undefined' && typeof imageWidth !== 'number') {\n    throw new Error('2nd argument should be a number if defined')\n  }\n\n  const jiveStorageResult =\n    initialImageURL.match(/(.+)servlet\\/JiveServlet\\/(downloadImage|previewBody)\\/([\\d-]+)\\/(.+)/i)\n\n  //console.log('jiveStorageResult', jiveStorageResult)\n\n  if (!jiveStorageResult || !jiveStorageResult[3]) return initialImageURL\n\n  //get jive image ID from URL\n  const imageNumberChunks = jiveStorageResult[3].split('-')\n  const imageID = imageNumberChunks[imageNumberChunks.length - 1]\n\n  switch (jiveStorageResult[2]) {\n    case 'downloadImage':\n      return jiveStorageResult[1]\n        + 'api/core/v3/images/' + imageID + '?width=' + imageWidth\n        + (thumbnail ? '&thumbnail=true' : '')\n    case 'previewBody':\n      return jiveStorageResult[1]\n        + 'servlet/JiveServlet?bodyImage=true&contentType=image&maxWidth=500&maxHeight=300'\n        + '&binaryBodyID=' + imageID\n  }\n}\n\nexport function findContentImage (contentItem, mode = 'regexp', fallback = true) {\n\n  if (!contentItem || !contentItem.content || !contentItem.content.text) return null\n\n  if (typeof mode !== 'undefined' && !['regexp', 'api', 'jquery'].includes(mode)) {\n    throw new Error('2nd argument should be \"regexp\"|\"api\"|\"jquery\"')\n  }\n\n  let image\n\n  function getFromApi () {\n    if (contentItem.contentImages && contentItem.contentImages.length) {\n      return contentItem.contentImages[0].ref\n    } else if (contentItem.thumbnailURL) {\n      return contentItem.thumbnailURL\n    }\n    return false\n  }\n\n  switch (mode) {\n    case 'api':\n      // version 1: take from API. Downside: API images list never updates after content creation\n      image = getFromApi()\n      break\n    case 'jquery':\n      //version 2: find image links with jQuery. Downside: it requests all the images content item has\n      image = jQuery ? jQuery(contentItem.content.text).find('img').attr('src') : false\n      break\n    case 'regexp':\n      //version 3: Find image URLs by regExp\n      //regexp: <img[^>]*src=[\"']?([^>\"']+)[\"']?[^>]*>\n      const regexp = RegExp('<img[^>]*src=[\"\\']?([^>\"\\']+)[\"\\']?[^>]*>', 'gim')\n\n      let matches\n      let imagesArray = []\n      while ((matches = regexp.exec(contentItem.content.text)) !== null) {\n        if (!matches[0].match(/class=[\"'][^\"']*emoticon-inline/im)) {\n          imagesArray.push(matches[1])\n        }\n      }\n\n      image = (imagesArray.length) ? imagesArray[0] : false\n      break\n  }\n\n  if (!image && mode !== 'api' && fallback) {\n    image = getFromApi()\n  }\n\n  return image\n}\n\nexport function getImagelessHTML (htmlText) {\n  return htmlText.replace(/<img[^>]*src=[\"']?([^>\"']+)[\"']?[^>]*>/gim, '')\n}\n\nexport function getContentImage (contentItem, options = {}) {\n\n  const defaultOptions = {\n    imageWidth: 500,\n    mode: 'regexp',\n    thumbnail: false,\n    fallback: true\n  }\n\n  options = {\n    ...defaultOptions,\n    ...options\n  }\n\n  const { imageWidth, mode, thumbnail, fallback } = options\n\n  return getCacheableImage(findContentImage(contentItem, mode, fallback), imageWidth, thumbnail)\n}\n\nexport function jsonCopy (obj) {\n  if (typeof obj !== 'object') return null\n  try {\n    return JSON.parse(JSON.stringify(obj))\n  } catch (error) {\n    console.error('Warning! Argument is not a valid JSON. Details:', error)\n  }\n}\n\nexport function isEmptyObject (obj) {\n  if (typeof obj !== 'object') return null\n  return Object.keys(obj).length === 0\n}\n\nconst utils = {\n  pause,\n  unescapeHtmlEntities,\n  splitArray,\n  abridge,\n  getCacheableImage,\n  findContentImage,\n  getContentImage,\n  getImagelessHTML,\n  jsonCopy,\n  isEmptyObject\n}\n\nexport default utils"]}