{"version":3,"sources":["src/utils.es6"],"names":["unescapeHtmlEntities","pause","splitArray","abridge","getCacheableImage","findContentImage","getImagelessHTML","getContentImage","jsonCopy","isEmptyObject","jQuery","window","text","Error","temp","document","createElement","innerHTML","replace","innerText","textContent","ms","setTimeout","resolve","array","chunksNumber","Array","newArray","i","push","undefined","length","chunkLength","Math","ceil","forEach","item","chunkNumber","floor","newText","slice","match","words","split","join","initialImageURL","imageWidth","thumbnail","jiveStorageResult","imageNumberChunks","imageID","contentItem","mode","fallback","content","includes","image","getFromApi","contentImages","ref","thumbnailURL","find","attr","images","htmlText","options","defaultOptions","obj","JSON","parse","error","console","utils"],"mappings":"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","file":"utils.js","sourcesContent":["const jQuery = window.jQuery\n\nexport function unescapeHtmlEntities(text) {\n    if(typeof text !== 'string') throw new Error('Argument should be a string')\n\n    const temp = document.createElement('div')\n    temp.innerHTML = text.replace(/<|&lt;/gi, '‹').replace(/>|&gt;/gi, '›')\n    return temp.innerText || temp.textContent\n}\n\nexport function pause(ms=0) {\n    if (typeof ms !== 'number') throw new Error('Expected parameter to be a number')\n    if (ms < 0) throw new Error(\"We can't do time travel :) Please input a positive number or 0\")\n\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function splitArray(array, chunksNumber) {\n    if (!(array instanceof Array)) throw new Error ('1st argument should be an array')\n    if (typeof chunksNumber !== 'number') throw new Error ('1st argument should be an array')\n    if (chunksNumber <= 0) return []\n    if (chunksNumber === 1) return array\n\n    const newArray = []\n\n    for (let i = 0; i < chunksNumber; i++) {\n        newArray.push([])\n    }\n\n    if (array !== undefined && array.length) {\n        const chunkLength = Math.ceil(array.length / chunksNumber)\n\n        array.forEach((item, i) => {\n            const chunkNumber = Math.floor(i / chunkLength)\n            newArray[chunkNumber].push(item)\n        })\n    }\n\n    return newArray\n}\n\nexport function abridge(text, length = 160) {\n\n    if (typeof text !== 'string') {\n        throw new Error(`\"abridge\" 1st argument must be a string (${typeof text} given)`)\n    }\n\n    //if it's less than limit - just return it\n    if (text.length <= length) return text\n\n    let newText = text.slice(0, length)\n\n    // if the next symbol is not a whitespace and not a punctuation - remove last word\n    if (!text[length].match(/\\s|\\.|,|:|;|!|\\?/)) {\n\n        let words = newText.split(' ')\n\n        //remove last word (cause it can be broken, or too long in case of a link)\n        if (words.length > 1) {\n            words = words.slice(0, words.length - 1)\n        }\n\n        newText = words.join(' ')\n    }\n\n    // remove commas and dots from a last word\n    newText = newText.replace(/(\\.|,|;|:)$/, '')\n\n    return newText + '...'\n}\n\nexport function getCacheableImage(initialImageURL, imageWidth = 500, thumbnail = false) {\n\n    //return initialImageURL\n    if (!initialImageURL) return initialImageURL\n\n    if (typeof initialImageURL !== 'string') {\n        throw new Error ('1st argument should be falsy value or string')\n    }\n    if (typeof imageWidth !== 'undefined' && typeof imageWidth !== 'number'){\n        throw new Error ('2nd argument should be a number if defined')\n    }\n\n    const jiveStorageResult =\n        initialImageURL.match(/(.+)servlet\\/JiveServlet\\/(downloadImage|previewBody)\\/([\\d-]+)\\/(.+)/i)\n\n    //console.log('jiveStorageResult', jiveStorageResult)\n\n    if (!jiveStorageResult || !jiveStorageResult[3]) return initialImageURL\n\n    //get jive image ID from URL\n    const imageNumberChunks = jiveStorageResult[3].split('-')\n    const imageID = imageNumberChunks[imageNumberChunks.length - 1]\n\n    switch (jiveStorageResult[2]){\n        case 'downloadImage':\n            return jiveStorageResult[1]\n                + 'api/core/v3/images/' + imageID + '?width=' + imageWidth\n                + (thumbnail ? '&thumbnail=true' : '')\n        case 'previewBody':\n            return jiveStorageResult[1]\n                + 'servlet/JiveServlet?bodyImage=true&contentType=image&maxWidth=500&maxHeight=300'\n                + '&binaryBodyID=' + imageID\n    }\n}\n\nexport function findContentImage(contentItem, mode = 'regexp', fallback = true) {\n\n    if (!contentItem || !contentItem.content || !contentItem.content.text) return null\n\n    if (typeof mode !== 'undefined' && !['regexp', 'api', 'jquery'].includes(mode)) {\n        throw new Error('2nd argument should be \"regexp\"|\"api\"|\"jquery\"')\n    }\n\n    let image\n\n    function getFromApi(){\n        if (contentItem.contentImages && contentItem.contentImages.length) {\n            return contentItem.contentImages[0].ref\n        } else if (contentItem.thumbnailURL) {\n            return contentItem.thumbnailURL\n        }\n        return false\n    }\n\n    switch (mode) {\n        case 'api':\n            // version 1: take from API. Downside: API images list never updates after content creation\n            image = getFromApi()\n            break\n        case 'jquery':\n            //version 2: find image links with jQuery. Downside: it requests all the images content item has\n            image = jQuery ? jQuery(contentItem.content.text).find('img').attr('src') : false\n            break\n        case 'regexp':\n            //version 3: Find image URLs by regExp\n            const images = contentItem.content.text.match(/<img[^>]*src=[\"']?([^>\"']+)[\"']?[^>]*>/im)\n            image = (images && images[1]) ? images[1] : false\n            break\n    }\n\n    if (!image && mode !== 'api' && fallback) {\n        image = getFromApi()\n    }\n\n    return image\n}\n\nexport function getImagelessHTML(htmlText) {\n    return htmlText.replace(/<img[^>]*src=[\"']?([^>\"']+)[\"']?[^>]*>/gim, '')\n}\n\nexport function getContentImage(contentItem, options={}){\n\n    const defaultOptions = {\n        imageWidth: 500,\n        mode: 'regexp',\n        thumbnail: false,\n        fallback: true\n    }\n\n    options = {\n        ...defaultOptions,\n        ...options\n    }\n\n    const {imageWidth, mode, thumbnail, fallback} = options\n\n    return getCacheableImage(findContentImage(contentItem, mode, fallback), imageWidth, thumbnail)\n}\n\nexport function jsonCopy (obj) {\n    if (typeof obj !== 'object') return null\n    try {\n        return JSON.parse(JSON.stringify(obj))\n    } catch (error) {\n        console.error('Warning! Argument is not a valid JSON. Details:', error)\n    }\n}\n\nexport function isEmptyObject (obj){\n    if (typeof obj !== 'object') return null\n    return Object.keys(obj).length === 0\n}\n\nconst utils = {\n    pause,\n    unescapeHtmlEntities,\n    splitArray,\n    abridge,\n    getCacheableImage,\n    findContentImage,\n    getContentImage,\n    getImagelessHTML,\n    jsonCopy,\n    isEmptyObject\n}\n\nexport default utils"]}