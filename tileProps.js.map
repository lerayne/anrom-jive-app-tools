{"version":3,"sources":["src/tileProps.jsx"],"names":["urlParemeters","gala","undefined","console","log","tile","getJiveURL","getAppURL","parent","url","gadgets","require","util","getUrlParameters","tileUrl","tileId","query","syn_app","split","pathChunks","pathname","pop","tilePath","join","tileProps"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAIA,sBAAJ;;AAEA,IAAIC,QAAQC,SAAR,IAAqB,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAAzC,EAAmD;;AAE/CE,YAAQC,GAAR,CAAY,YAAZ,EAA0B,eAAKC,IAAL,CAAUC,UAAV,EAA1B;AACAH,YAAQC,GAAR,CAAY,WAAZ,EAAyB,eAAKC,IAAL,CAAUE,SAAV,EAAzB;;AAEAP,oBAAgB;AACZQ,gBAAQ,eAAKH,IAAL,CAAUC,UAAV,MAA0B,EADtB;AAEZG,aAAK,eAAKJ,IAAL,CAAUE,SAAV,MAAyB;AAFlB,KAAhB;AAIH,CATD,MASO;AACH,QAAMG,UAAUC,QAAQ,cAAR,CAAhB;AACAX,oBAAgBU,QAAQE,IAAR,CAAaC,gBAAb,EAAhB;AACH;;AAED;qBACiBb,a;IAAVQ,M,kBAAAA,M;;AAEP;;AACA,IAAMM,UAAU,gBAAMd,cAAcS,GAApB,EAAyB,IAAzB,CAAhB;;AAEA;AACA,IAAIM,eAAJ;AACA,IAAID,QAAQE,KAAR,IAAiBF,QAAQE,KAAR,CAAcC,OAAnC,EAA4C;AAAA,QACjCA,OADiC,GACtBH,QAAQE,KADc,CACjCC,OADiC;;AAExC,YAQIF,MARJ,YAASD,QAAQE,KAAR,CAAc,SAASC,OAAvB,EAAgCC,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAT;AACH;;AAED;AACA,IAAMC,aAAaL,QAAQM,QAAR,GAAmBN,QAAQM,QAAR,CAAiBF,KAAjB,CAAuB,GAAvB,CAAnB,GAAiD,EAApE;AACAC,WAAWE,GAAX;AACA,IAAMC,WAAWH,WAAWI,IAAX,CAAgB,GAAhB,CAAjB;;QAEQR,M,GAAAA,M;QAAQO,Q,GAAAA,Q;QAAUR,O,GAAAA,O;QAASN,M,GAAAA,M;;AACnC,IAAMgB,YAAY,EAACT,cAAD,EAASO,kBAAT,EAAmBR,gBAAnB,EAA4BN,cAA5B,EAAlB;kBACegB,S","file":"tileProps.js","sourcesContent":["import {parse} from 'url'\r\nimport jive from 'jive'\r\n\r\nlet urlParemeters\r\n\r\nif (gala != undefined && typeof gala === 'object') {\r\n\r\n    console.log('getJiveURL', jive.tile.getJiveURL())\r\n    console.log('getAppURL', jive.tile.getAppURL())\r\n\r\n    urlParemeters = {\r\n        parent: jive.tile.getJiveURL() || '',\r\n        url: jive.tile.getAppURL() || ''\r\n    }\r\n} else {\r\n    const gadgets = require('jive/gadgets')\r\n    urlParemeters = gadgets.util.getUrlParameters()\r\n}\r\n\r\n// parent: url of a root jive instance (e.g. mysite.com instead of domain-protected apps.mysite.com)\r\nconst {parent} = urlParemeters\r\n\r\n// full tile url prsed as jive object\r\nconst tileUrl = parse(urlParemeters.url, true)\r\n\r\n// if called from tile - return tile id\r\nlet tileId\r\nif (tileUrl.query && tileUrl.query.syn_app) {\r\n    const {syn_app} = tileUrl.query\r\n    tileId = tileUrl.query['ref_' + syn_app].split(':')[1]\r\n}\r\n\r\n//path that helps address images and other assets\r\nconst pathChunks = tileUrl.pathname ? tileUrl.pathname.split('/') : []\r\npathChunks.pop();\r\nconst tilePath = pathChunks.join('/')\r\n\r\nexport {tileId, tilePath, tileUrl, parent}\r\nconst tileProps = {tileId, tilePath, tileUrl, parent}\r\nexport default tileProps\r\n"]}