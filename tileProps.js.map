{"version":3,"sources":["src/tileProps.es6"],"names":["jive","window","gadgets","getUrlParemeters","util","getUrlParameters","cache","tileUrl","url","tilePath","_tileUrl","pathChunks","pathname","split","pop","join","tileId","_tileId","query","syn_app","parent","getContainerAsync","resolve","reject","place","tile","getContainer","tileProps"],"mappings":";;;;;;;;;;;AAAA;;;;AAEA,IAAMA,OAAOC,OAAOD,IAApB;AACA,IAAME,UAAUD,OAAOC,OAAvB;;AAEA,IAAMC,mBAAmBD,QAAQE,IAAR,CAAaC,gBAAtC;;AAEA,IAAMC,QAAQ,EAAd;;AAEA;AACA,IAAMC,UAAU,SAAVA,OAAU,GAAU;AACtB,QAAI,CAACD,MAAMC,OAAX,EAAoB;AAChBD,cAAMC,OAAN,GAAgB,gBAAMJ,mBAAmBK,GAAzB,EAA8B,IAA9B,CAAhB;AACH;;AAED,WAAOF,MAAMC,OAAb;AACH,CAND;;AAQA;AACA,IAAME,WAAW,SAAXA,QAAW,GAAU;AACvB,QAAI,CAACH,MAAMG,QAAX,EAAqB;;AAEjB,YAAMC,WAAWH,SAAjB;;AAEA,YAAMI,aAAaD,SAASE,QAAT,GAAoBF,SAASE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAApB,GAAmD,EAAtE;AACAF,mBAAWG,GAAX;AACAR,cAAMG,QAAN,GAAiBE,WAAWI,IAAX,CAAgB,GAAhB,CAAjB;AACH;;AAED,WAAOT,MAAMG,QAAb;AACH,CAXD;;AAaA;AACA,IAAMO,SAAS,SAATA,MAAS,GAAU;AACrB,QAAI,CAACV,MAAMU,MAAX,EAAmB;;AAEf,YAAMN,WAAWH,SAAjB;;AAEA,YAAIU,UAAU,KAAd;AACA,YAAIP,SAASQ,KAAT,IAAkBR,SAASQ,KAAT,CAAeC,OAArC,EAA8C;AAAA,gBACnCA,OADmC,GACxBT,SAASQ,KADe,CACnCC,OADmC;;AAE1CF,sBAAUP,SAASQ,KAAT,CAAe,SAASC,OAAxB,EAAiCN,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAV;AACH;;AAEDP,cAAMU,MAAN,GAAeC,OAAf;AACH;;AAED,WAAOX,MAAMU,MAAb;AACH,CAfD;;AAiBA;AACA,IAAMI,SAAS,SAATA,MAAS,GAAU;AACrB,QAAI,CAACd,MAAMc,MAAX,EAAmB;AACfd,cAAMc,MAAN,GAAejB,mBAAmBiB,MAAlC;AACH;;AAED,WAAOd,MAAMc,MAAb;AACH,CAND;;AAQA,IAAMC,oBAAoB,SAApBA,iBAAoB,GAAU;AAChC,WAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,YAAIjB,MAAMkB,KAAV,EAAiB;AACbF,oBAAQhB,MAAMkB,KAAd;AACH,SAFD,MAEO;AACHxB,iBAAKyB,IAAL,CAAUC,YAAV,CAAuB,iBAAS;AAC5BpB,sBAAMkB,KAAN,GAAcA,KAAd;AACAF,wBAAQE,KAAR;AACH,aAHD;AAIH;AACJ,KAVM,CAAP;AAWH,CAZD;;QAcQR,M,GAAAA,M;QAAQP,Q,GAAAA,Q;QAAUF,O,GAAAA,O;QAASa,M,GAAAA,M;QAAQC,iB,GAAAA,iB;;AAC3C,IAAMM,YAAY,EAACX,cAAD,EAASP,kBAAT,EAAmBF,gBAAnB,EAA4Ba,cAA5B,EAAoCC,oCAApC,EAAlB;kBACeM,S","file":"tileProps.js","sourcesContent":["import {parse} from 'url'\n\nconst jive = window.jive\nconst gadgets = window.gadgets\n\nconst getUrlParemeters = gadgets.util.getUrlParameters\n\nconst cache = {}\n\n// full tile url prsed as jive object\nconst tileUrl = function(){\n    if (!cache.tileUrl) {\n        cache.tileUrl = parse(getUrlParemeters().url, true)\n    }\n\n    return cache.tileUrl\n}\n\n//path that helps address images and other assets\nconst tilePath = function(){\n    if (!cache.tilePath) {\n\n        const _tileUrl = tileUrl()\n\n        const pathChunks = _tileUrl.pathname ? _tileUrl.pathname.split('/') : []\n        pathChunks.pop();\n        cache.tilePath = pathChunks.join('/')\n    }\n\n    return cache.tilePath\n}\n\n// if called from tile - return tile id\nconst tileId = function(){\n    if (!cache.tileId) {\n\n        const _tileUrl = tileUrl()\n\n        let _tileId = false\n        if (_tileUrl.query && _tileUrl.query.syn_app) {\n            const {syn_app} = _tileUrl.query\n            _tileId = _tileUrl.query['ref_' + syn_app].split(':')[1]\n        }\n\n        cache.tileId = _tileId\n    }\n\n    return cache.tileId\n}\n\n// parent: url of a root jive instance (e.g. mysite.com instead of domain-protected apps.mysite.com)\nconst parent = function(){\n    if (!cache.parent) {\n        cache.parent = getUrlParemeters().parent\n    }\n\n    return cache.parent\n}\n\nconst getContainerAsync = function(){\n    return new Promise((resolve, reject) => {\n\n        if (cache.place) {\n            resolve(cache.place)\n        } else {\n            jive.tile.getContainer(place => {\n                cache.place = place\n                resolve(place)\n            })\n        }\n    })\n}\n\nexport {tileId, tilePath, tileUrl, parent, getContainerAsync}\nconst tileProps = {tileId, tilePath, tileUrl, parent, getContainerAsync}\nexport default tileProps\n"]}