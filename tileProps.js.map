{"version":3,"sources":["tileProps.es6"],"names":["jive","window","gadgets","getUrlParemeters","util","getUrlParameters","cache","tileUrl","url","tilePath","_tileUrl","pathChunks","pathname","split","pop","join","tileId","_tileId","query","syn_app","parent","getContainerAsync","Promise","resolve","reject","place","tile","getContainer","tileProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,IAAI,GAAGC,MAAM,CAACD,IAApB;AACA,IAAME,OAAO,GAAGD,MAAM,CAACC,OAAvB;AAEA,IAAMC,gBAAgB,GAAGD,OAAO,CAACE,IAAR,CAAaC,gBAAtC;AAEA,IAAMC,KAAK,GAAG,EAAd,C,CAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAU;AACtB,MAAI,CAACD,KAAK,CAACC,OAAX,EAAoB;AAChBD,IAAAA,KAAK,CAACC,OAAN,GAAgB,gBAAMJ,gBAAgB,GAAGK,GAAzB,EAA8B,IAA9B,CAAhB;AACH;;AAED,SAAOF,KAAK,CAACC,OAAb;AACH,CAND,C,CAQA;;;;;AACA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAU;AACvB,MAAI,CAACH,KAAK,CAACG,QAAX,EAAqB;AAEjB,QAAMC,QAAQ,GAAGH,OAAO,EAAxB;;AAEA,QAAMI,UAAU,GAAGD,QAAQ,CAACE,QAAT,GAAoBF,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAApB,GAAmD,EAAtE;AACAF,IAAAA,UAAU,CAACG,GAAX;AACAR,IAAAA,KAAK,CAACG,QAAN,GAAiBE,UAAU,CAACI,IAAX,CAAgB,GAAhB,CAAjB;AACH;;AAED,SAAOT,KAAK,CAACG,QAAb;AACH,CAXD,C,CAaA;;;;;AACA,IAAMO,MAAM,GAAG,SAATA,MAAS,GAAU;AACrB,MAAI,CAACV,KAAK,CAACU,MAAX,EAAmB;AAEf,QAAMN,QAAQ,GAAGH,OAAO,EAAxB;;AAEA,QAAIU,OAAO,GAAG,KAAd;;AACA,QAAIP,QAAQ,CAACQ,KAAT,IAAkBR,QAAQ,CAACQ,KAAT,CAAeC,OAArC,EAA8C;AAC1C,UAAOA,OAAP,GAAkBT,QAAQ,CAACQ,KAA3B,CAAOC,OAAP;AACAF,MAAAA,OAAO,GAAGP,QAAQ,CAACQ,KAAT,CAAe,SAASC,OAAxB,EAAiCN,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAV;AACH;;AAEDP,IAAAA,KAAK,CAACU,MAAN,GAAeC,OAAf;AACH;;AAED,SAAOX,KAAK,CAACU,MAAb;AACH,CAfD,C,CAiBA;;;;;AACA,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAU;AACrB,MAAI,CAACd,KAAK,CAACc,MAAX,EAAmB;AACfd,IAAAA,KAAK,CAACc,MAAN,GAAejB,gBAAgB,GAAGiB,MAAlC;AACH;;AAED,SAAOd,KAAK,CAACc,MAAb;AACH,CAND;;;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAU;AAChC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIlB,KAAK,CAACmB,KAAV,EAAiB;AACbF,MAAAA,OAAO,CAACjB,KAAK,CAACmB,KAAP,CAAP;AACH,KAFD,MAEO;AACHzB,MAAAA,IAAI,CAAC0B,IAAL,CAAUC,YAAV,CAAuB,UAAAF,KAAK,EAAI;AAC5BnB,QAAAA,KAAK,CAACmB,KAAN,GAAcA,KAAd;AACAF,QAAAA,OAAO,CAACE,KAAD,CAAP;AACH,OAHD;AAIH;AACJ,GAVM,CAAP;AAWH,CAZD;;;AAeA,IAAMG,SAAS,GAAG;AAACZ,EAAAA,MAAM,EAANA,MAAD;AAASP,EAAAA,QAAQ,EAARA,QAAT;AAAmBF,EAAAA,OAAO,EAAPA,OAAnB;AAA4Ba,EAAAA,MAAM,EAANA,MAA5B;AAAoCC,EAAAA,iBAAiB,EAAjBA;AAApC,CAAlB;eACeO,S","sourcesContent":["import {parse} from 'url'\n\nconst jive = window.jive\nconst gadgets = window.gadgets\n\nconst getUrlParemeters = gadgets.util.getUrlParameters\n\nconst cache = {}\n\n// full tile url prsed as jive object\nconst tileUrl = function(){\n    if (!cache.tileUrl) {\n        cache.tileUrl = parse(getUrlParemeters().url, true)\n    }\n\n    return cache.tileUrl\n}\n\n//path that helps address images and other assets\nconst tilePath = function(){\n    if (!cache.tilePath) {\n\n        const _tileUrl = tileUrl()\n\n        const pathChunks = _tileUrl.pathname ? _tileUrl.pathname.split('/') : []\n        pathChunks.pop();\n        cache.tilePath = pathChunks.join('/')\n    }\n\n    return cache.tilePath\n}\n\n// if called from tile - return tile id\nconst tileId = function(){\n    if (!cache.tileId) {\n\n        const _tileUrl = tileUrl()\n\n        let _tileId = false\n        if (_tileUrl.query && _tileUrl.query.syn_app) {\n            const {syn_app} = _tileUrl.query\n            _tileId = _tileUrl.query['ref_' + syn_app].split(':')[1]\n        }\n\n        cache.tileId = _tileId\n    }\n\n    return cache.tileId\n}\n\n// parent: url of a root jive instance (e.g. mysite.com instead of domain-protected apps.mysite.com)\nconst parent = function(){\n    if (!cache.parent) {\n        cache.parent = getUrlParemeters().parent\n    }\n\n    return cache.parent\n}\n\nconst getContainerAsync = function(){\n    return new Promise((resolve, reject) => {\n\n        if (cache.place) {\n            resolve(cache.place)\n        } else {\n            jive.tile.getContainer(place => {\n                cache.place = place\n                resolve(place)\n            })\n        }\n    })\n}\n\nexport {tileId, tilePath, tileUrl, parent, getContainerAsync}\nconst tileProps = {tileId, tilePath, tileUrl, parent, getContainerAsync}\nexport default tileProps\n"],"file":"tileProps.js"}